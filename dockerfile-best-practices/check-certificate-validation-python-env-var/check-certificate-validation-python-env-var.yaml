apiVersion: policies.kyverno.io/v1alpha1
kind: ValidatingPolicy
metadata:
  name: check-certificate-validation-python-env-var
  annotations:
    policies.kyverno.io/title: Check for certificate validation in the Dockerfile using Python environment variable
    policies.kyverno.io/category: Dockerfile Best Practices
    policies.kyverno.io/severity: medium
    policies.nirmata.io/remediation-docs: "https://docs.nirmata.io/policysets/dockerfile_best_practices/check-certificate-validation-python-env-var/"
    policies.kyverno.io/description: >-
      The PYTHONHTTPSVERIFY environment variable is used in Python to control
      certificate verification when making HTTPS requests. This policy checks
      whether this environment variable is set to 0. By default, it is set to 1,
      which enables certificate verification.
spec:
  validationActions:
    - Audit
  evaluation:
    mode: JSON
    background:
      enabled: false
  matchConstraints:
    resourceRules:
      - apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["*"]
        operations: ["CREATE", "UPDATE"]
  matchConditions:
    - name: has-dockerfile-structure
      expression: "has(object.Stages)"
    - name: has-env-commands
      expression: "has(object.Stages) && object.Stages.exists(stage, has(stage.Commands) && stage.Commands.exists(cmd, cmd.Name == 'ENV'))"
  validations:
    - expression: |
        object.Stages.exists(stage,
          has(stage.Commands) && stage.Commands.exists(cmd,
            cmd.Name == 'ENV' && has(cmd.Env) && cmd.Env.exists(env,
              env.Key == 'PYTHONHTTPSVERIFY' && env.Value == '1'
            )
          )
        )
      message: "Ensure certificate validation is enabled by using `PYTHONHTTPSVERIFY` env with value set to `1`"     
