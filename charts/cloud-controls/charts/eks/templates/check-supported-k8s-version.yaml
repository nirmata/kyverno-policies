{{- if .Values.enabled }}
{{- $camelCaseName := "checkSupportedK8sVersion" }}
{{- $name := "check-supported-k8s-version" }}
{{- if not (has $name .Values.disabledPolicies) }}
apiVersion: {{ .Values.global.apiVersion | default "nirmata.io/v1alpha1" }}
kind: {{ .Values.global.policyKind | default "ValidatingPolicy" }}
metadata:
  name: {{ $name }}
  annotations:
    policies.kyverno.io/title: Check Supported K8s Version
    policies.kyverno.io/category: EKS Best Practices
    policies.kyverno.io/severity: medium
    policies.kyverno.io/description: >-
      This policy checks that EKS clusters are on a standard supported Kubernetes version
  labels:
    app: cloud-control-point
spec:
  failureAction: {{ if hasKey .Values $camelCaseName }}{{ if hasKey (index .Values $camelCaseName) "failureAction" }}{{ index (index .Values $camelCaseName) "failureAction" }}{{ else }}{{ .Values.failureAction | default "Audit" }}{{ end }}{{ else }}{{ .Values.failureAction | default "Audit" }}{{ end }}
  scan: {{ if hasKey .Values $camelCaseName }}{{ if hasKey (index .Values $camelCaseName) "scanner" }}{{ index (index .Values $camelCaseName) "scanner" }}{{ else if hasKey .Values "scanner" }}{{ .Values.scanner }}{{ else }}true{{ end }}{{ else if hasKey .Values "scanner" }}{{ .Values.scanner }}{{ else }}true{{ end }}
  admission: {{ if hasKey .Values $camelCaseName }}{{ if hasKey (index .Values $camelCaseName) "admission" }}{{ index (index .Values $camelCaseName) "admission" }}{{ else if hasKey .Values "admission" }}{{ .Values.admission }}{{ else }}true{{ end }}{{ else if hasKey .Values "admission" }}{{ .Values.admission }}{{ else }}true{{ end }}
  rules:
    - name: {{ $name }}
      identifier: payload.name
      match:
        all:
        - (metadata.provider): "AWS"
        - (metadata.service): EKS
        - (metadata.resource): "Cluster"
      context:
      - name: supported_k8s_versions
        variable: 
        - '1.29'
        - '1.30'
        - '1.31'
      assert:
        all:
        - message: "Version specified must be one of these suppported versions ['1.29', '1.30', '1.31']"
          check:
            payload:
              version: 
                (contains($supported_k8s_versions, @)): true 
{{- end }}
{{- end }}