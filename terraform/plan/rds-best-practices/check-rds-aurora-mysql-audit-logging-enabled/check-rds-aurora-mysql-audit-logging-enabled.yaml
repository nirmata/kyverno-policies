apiVersion: json.kyverno.io/v1alpha1
kind: ValidatingPolicy
metadata:
  name: check-rds-aurora-mysql-audit-logging-enabled
  annotations:
    policies.kyverno.io/title: Check RDS Aurora Mysql Audit Logging Enabled
    policies.kyverno.io/category: AWS RDS Best Practices
    policies.kyverno.io/severity: medium
    policies.kyverno.io/description: >-
      This policy checks whether an Amazon Aurora MySQL DB cluster is configured to publish audit logs to Amazon CloudWatch Logs. 
      The policy fails if the cluster isn't configured to publish audit logs to CloudWatch Logs. The policy doesn't generate findings for Aurora Serverless v1 DB clusters.
      Audit logs capture a record of database activity, including login attempts, data modifications, schema changes, and other events 
      that can be audited for security and compliance purposes. When you configure an Aurora MySQL DB cluster to publish 
      audit logs to a log group in Amazon CloudWatch Logs, you can perform real-time analysis of the log data. 
      CloudWatch Logs retains logs in highly durable storage. You can also create alarms and view metrics in CloudWatch.
spec:
  rules:
    - name: check-rds-aurora-mysql-audit-logging-enabled
      match:
        all:
        - ($analyzer.resource.type): terraform-plan
        - (planned_values.root_module.resources[?type=='aws_rds_cluster' && contains('aurora-mysql', values.engine) && !contains('serverless', values.engine_mode)] || `[]` | length(@) > `0`): true
      assert:
        all:
        - message: Aurora MySQL DB clusters should publish audit logs to CloudWatch Logs
          check:
            ~.(planned_values.root_module.resources[?type=='aws_rds_cluster' && contains('aurora-mysql', values.engine) && !contains('serverless', values.engine_mode)]):
                values:
                  (enabled_cloudwatch_logs_exports != `null` && length(enabled_cloudwatch_logs_exports) > `0`): true