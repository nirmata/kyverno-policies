apiVersion: json.kyverno.io/v1alpha1
kind: ValidatingPolicy
metadata:
  name: validate-secret-env-variables
  annotations:
    policies.kyverno.io/title: Validate Secret Env Variables
    policies.kyverno.io/category: ECS Best Practices
    policies.kyverno.io/severity: medium
    policies.kyverno.io/description: >-
      Passing sensitive data in plaintext can cause security issues. The data might be discoverable in the AWS Management Console or through AWS APIs such as DescribeTaskDefinition.
      To securely inject data into containers, reference the values stored in Parameter Store, a capability of AWS Systems Manager. You can also use AWS Secrets Manager in an Amazon ECS task definition.
      Then, you can expose your sensitive information as environment variables or in the log configuration of a container. 
      This policy checks if any of the environment variables passed are any of AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, or ECS_ENGINE_AUTH_DATA.
spec:
  rules:
    - name: validate-secret-env-variables
      match:
        all:
        - ($analyzer.resource.type): terraform-plan
        - (planned_values.root_module.resources[?type=='aws_ecs_task_definition'] | length(@) > `0`): true
      assert:
        all:
        - message: >-
            ECS task definitions should not contain sensitive environment variables like AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, or ECS_ENGINE_AUTH_DATA.
          check:
            ~.(planned_values.root_module.resources[?type=='aws_ecs_task_definition']):
                values:
                  ~.(json_parse(container_definitions)):
                      ~.(environment || `[]`):
                          name:
                            (!contains(@, 'AWS_ACCESS_KEY_ID')): true
                            (!contains(@, 'AWS_SECRET_ACCESS_KEY')): true
                            (!contains(@, 'ECS_ENGINE_AUTH_DATA')): true