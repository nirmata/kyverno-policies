apiVersion: policies.kyverno.io/v1alpha1
kind: ValidatingPolicy
metadata:
  name: check-source-arn-account
  annotations:
    policies.kyverno.io/title: Check Source ARN or Account
    policies.kyverno.io/category: AWS Lambda Best Practices
    policies.kyverno.io/severity: medium
    policies.kyverno.io/description: >-
      This policy ensures that AWS Lambda function permissions delegated to AWS services are limited by SourceArn or SourceAccount
spec:
  validationActions:
    - Deny
  evaluation:
    mode: JSON
    background:
      enabled: false
  matchConstraints:
    resourceRules:
      - apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["*"]
        operations: ["CREATE", "UPDATE"]
  matchConditions:
    - name: is-terraform-plan
      expression: "has(object.planned_values) && has(object.terraform_version)"
    - name: has-lambda-permission-aws-service
      expression: "has(object.planned_values) && has(object.planned_values.root_module) && has(object.planned_values.root_module.resources) && object.planned_values.root_module.resources.exists(r, r.type == 'aws_lambda_permission' && has(r.values.principal) && r.values.principal.endsWith('.amazonaws.com'))"
  validations:
    - expression: |
        object.planned_values.root_module.resources.filter(r, 
          r.type == 'aws_lambda_permission' && 
          has(r.values.principal) && 
          r.values.principal.endsWith('.amazonaws.com')
        ).all(perm,
          (has(perm.values.source_arn) && perm.values.source_arn != null && perm.values.source_arn != '') ||
          (has(perm.values.source_account) && perm.values.source_account != null && perm.values.source_account != '')
        )
      message: "AWS Lambda function permissions delegated to AWS services should be limited by SourceArn or SourceAccount"

