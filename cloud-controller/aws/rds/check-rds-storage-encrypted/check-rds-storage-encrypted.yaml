apiVersion: nirmata.io/v1alpha1
kind: ValidatingPolicy
metadata:
  name: check-rds-storage-encrypted
  annotations:
    policies.kyverno.io/title: Check RDS Storage Encrypted
    policies.kyverno.io/category: AWS RDS Best Practices
    policies.kyverno.io/severity: medium
    policies.kyverno.io/description: >-
      This policy checks whether storage encryption is enabled for your Amazon RDS DB instances.
      For an added layer of security for your sensitive data in RDS DB instances, you should configure your 
      RDS DB instances to be encrypted at rest. To encrypt your RDS DB instances and snapshots at rest, enable the 
      encryption option for your RDS DB instances. Data that is encrypted at rest includes the underlying storage 
      for DB instances, its automated backups, read replicas, and snapshots. RDS encrypted DB instances use the open 
      standard AES-256 encryption algorithm to encrypt your data on the server that hosts your RDS DB instances. 
      After your data is encrypted, Amazon RDS handles authentication of access and decryption of your data transparently 
      with a minimal impact on performance. You do not need to modify your database client applications to use encryption.
  labels:
    app: cloud-control-point
spec:
  failureAction: Audit
  matchConditions:
    - name: match-create-update
      expression: >
        request.operation in ['CREATE', 'UPDATE']
    - name: aws-rds-dbinstance
      expression: >
        object.TypeName == 'AWS::RDS::DBInstance'
  validations:
    - expression: >
        has(object.ResourceDescription) ?
        (
          has(object.ResourceDescription.Properties) &&
          has(object.ResourceDescription.Properties.storageEncrypted) &&
          object.ResourceDescription.Properties.storageEncrypted == true
        ) :
        (
          has(object.storageEncrypted) &&
          object.storageEncrypted == true
        )
      message: "RDS DB instances should have encryption at-rest enabled"
