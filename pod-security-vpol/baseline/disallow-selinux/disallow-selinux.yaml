apiVersion: policies.kyverno.io/v1alpha1
kind: ValidatingPolicy
metadata:
  name: disallow-selinux
  annotations:
    policies.kyverno.io/title: Disallow SELinux
    policies.kyverno.io/category: Pod Security Standards (Baseline)
    policies.kyverno.io/severity: high
    policies.kyverno.io/subject: Pod
    kyverno.io/kubernetes-version: "1.22-1.23"
    policies.nirmata.io/remediation-docs: "https://docs.nirmata.io/policysets/podsecurity/baseline/disallow-selinux/"
    policies.kyverno.io/description: >-
      SELinux options can be used to escalate privileges and should not be allowed.
      This policy ensures that the fields
      spec.securityContext.seLinuxOptions.type,
      spec.containers[*].securityContext.seLinuxOptions.type,
      spec.initContainers[*].securityContext.seLinuxOptions.type, and
      spec.ephemeralContainers[*].securityContext.seLinuxOptions.type
      must either be unset or set to one of the allowed values (container_t, container_init_t, or container_kvm_t).
spec:
  validationActions: [Audit]
  evaluation:
    background:
      enabled: true
  matchConstraints:
    resourceRules:
      - apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
        operations: ["CREATE", "UPDATE"]
  variables:
    - name: allowedTypes
      expression: >-
        ['container_t', 'container_init_t', 'container_kvm_t']
  validations:
    - expression: >-
        (!has(object.spec.securityContext) ||
         !has(object.spec.securityContext.seLinuxOptions) ||
         !has(object.spec.securityContext.seLinuxOptions.type) ||
         object.spec.securityContext.seLinuxOptions.type in variables.allowedTypes) &&

        object.spec.containers.orValue([]).all(c,
          !has(c.securityContext) ||
          !has(c.securityContext.seLinuxOptions) ||
          !has(c.securityContext.seLinuxOptions.type) ||
          c.securityContext.seLinuxOptions.type in variables.allowedTypes) &&

        (!has(object.spec.initContainers) ||
         object.spec.initContainers.all(c,
           !has(c.securityContext) ||
           !has(c.securityContext.seLinuxOptions) ||
           !has(c.securityContext.seLinuxOptions.type) ||
           c.securityContext.seLinuxOptions.type in variables.allowedTypes)) &&

        (!has(object.spec.ephemeralContainers) ||
         object.spec.ephemeralContainers.all(c,
           !has(c.securityContext) ||
           !has(c.securityContext.seLinuxOptions) ||
           !has(c.securityContext.seLinuxOptions.type) ||
           c.securityContext.seLinuxOptions.type in variables.allowedTypes))
      message: >-
        Setting the SELinux type is restricted. Must be one of: container_t, container_init_t, container_kvm_t.

    - expression: >-
        (!has(object.spec.securityContext) ||
         !has(object.spec.securityContext.seLinuxOptions) ||
         (!has(object.spec.securityContext.seLinuxOptions.user) &&
          !has(object.spec.securityContext.seLinuxOptions.role))) &&

        object.spec.containers.orValue([]).all(c,
          !has(c.securityContext) ||
          !has(c.securityContext.seLinuxOptions) ||
          (!has(c.securityContext.seLinuxOptions.user) &&
           !has(c.securityContext.seLinuxOptions.role))) &&

        (!has(object.spec.initContainers) ||
         object.spec.initContainers.all(c,
           !has(c.securityContext) ||
           !has(c.securityContext.seLinuxOptions) ||
           (!has(c.securityContext.seLinuxOptions.user) &&
            !has(c.securityContext.seLinuxOptions.role)))) &&

        (!has(object.spec.ephemeralContainers) ||
         object.spec.ephemeralContainers.all(c,
           !has(c.securityContext) ||
           !has(c.securityContext.seLinuxOptions) ||
           (!has(c.securityContext.seLinuxOptions.user) &&
            !has(c.securityContext.seLinuxOptions.role))))
      message: >-
        Setting the SELinux user or role is forbidden. The fields
        spec.securityContext.seLinuxOptions.user, spec.securityContext.seLinuxOptions.role,
        spec.containers[*].securityContext.seLinuxOptions.user, spec.containers[*].securityContext.seLinuxOptions.role,
        spec.initContainers[*].securityContext.seLinuxOptions.user, spec.initContainers[*].securityContext.seLinuxOptions.role,
        spec.ephemeralContainers[*].securityContext.seLinuxOptions.user, and spec.ephemeralContainers[*].securityContext.seLinuxOptions.role
        must be unset.
